"use strict";
// This file is auto-generated by @hey-api/openapi-ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.TenantSchema = exports.TenantConfigSchema = exports.ResourceSchemaSchema = exports.ResourceSchemaCreateRequestSchema = exports.BookingSchema = exports.BookingCreateRequestSchema = exports.SchemaSchema = exports.SchemaCreateRequestSchema = exports.SchemaSlotsSchema = exports.SchemaSlotSchema = exports.ErrorSchema = exports.ResourceSchema = exports.ResourceCreateRequestSchema = exports.ResourceDataSchema = exports.ResourceILoqSchema = exports.ModelSchema = void 0;
exports.ModelSchema = {
    type: 'object',
    required: ['id', 'tenant_id', 'created_at', 'updated_at'],
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        tenant_id: {
            type: 'string',
            example: 'acme'
        },
        created_at: {
            type: 'string',
            format: 'date-time'
        },
        updated_at: {
            type: 'string',
            format: 'date-time'
        }
    }
};
exports.ResourceILoqSchema = {
    title: 'ResourceILoq',
    type: 'object',
    required: ['type', 'calendar_id', 'network_module_id'],
    properties: {
        type: {
            type: 'string',
            enum: ['iloq']
        },
        calendar_id: {
            type: 'string',
            description: 'refers to ILoq /api/v2/CalendarDataTitle'
        },
        network_module_id: {
            type: 'string',
            description: 'refers to ILoq /api/v2/NetworkModule'
        },
        network_relay_id: {
            type: 'string',
            description: 'refers to ILoq /api/v2/NetworkModuleRelay'
        }
    }
};
exports.ResourceDataSchema = {
    title: 'ResourceData',
    oneOf: [
        {
            '$ref': '#/components/schemas/ResourceILoq'
        }
    ],
    discriminator: {
        propertyName: 'type',
        mapping: {
            iloq: '#/components/schemas/ResourceILoq'
        }
    }
};
exports.ResourceCreateRequestSchema = {
    title: 'ResourceCreateRequest',
    type: 'object',
    required: ['data'],
    properties: {
        data: {
            '$ref': '#/components/schemas/ResourceData'
        }
    }
};
exports.ResourceSchema = {
    title: 'Resource',
    allOf: [
        {
            '$ref': '#/components/schemas/Model'
        },
        {
            '$ref': '#/components/schemas/ResourceCreateRequest'
        }
    ]
};
exports.ErrorSchema = {
    title: 'Error',
    type: 'object',
    required: ['message', 'request_id'],
    properties: {
        message: {
            type: 'string',
            example: 'error message'
        },
        description: {
            type: 'string',
            example: 'error description'
        },
        request_id: {
            type: 'string',
            example: 'PbMtZxrFhLNciaVMndIZkdQMHyiKUerV'
        }
    }
};
exports.SchemaSlotSchema = {
    title: 'SchemaSlot',
    type: 'object',
    required: ['from', 'to'],
    properties: {
        from: {
            type: 'string',
            pattern: '^\\d{2}:\\d{2}$',
            description: "24 hour time.\n",
            example: '22:00'
        },
        to: {
            type: 'string',
            pattern: '^\\d{2}:\\d{2}$',
            description: "24 hour time.\nhours > 24 are allowed.\n",
            example: '26:00'
        }
    }
};
exports.SchemaSlotsSchema = {
    title: 'SchemaSlots',
    type: 'array',
    oneOf: [
        {
            minItems: 1,
            maxItems: 1
        },
        {
            minItems: 7,
            maxItems: 7
        }
    ],
    items: {
        type: 'array',
        items: {
            '$ref': '#/components/schemas/SchemaSlot'
        }
    }
};
exports.SchemaCreateRequestSchema = {
    title: 'SchemaCreateRequest',
    type: 'object',
    required: ['name', 'type', 'slots'],
    properties: {
        name: {
            type: 'string',
            example: 'Tv√§ttstugor'
        },
        type: {
            type: 'string',
            enum: ['daily', 'weekly']
        },
        slots: {
            '$ref': '#/components/schemas/SchemaSlots'
        }
    }
};
exports.SchemaSchema = {
    title: 'Schema',
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/Model'
        },
        {
            '$ref': '#/components/schemas/SchemaCreateRequest'
        }
    ]
};
exports.BookingCreateRequestSchema = {
    title: 'BookingCreateRequest',
    type: 'object',
    required: ['resource_id', 'date', 'slot', 'booked_by', 'type'],
    properties: {
        resource_id: {
            type: 'string',
            format: 'uuid',
            description: 'The booked resource'
        },
        date: {
            type: 'string',
            pattern: '^\\d{4}-\\d{2}-\\d{2}$',
            description: 'ISO Date',
            example: '2024-01-01'
        },
        slot: {
            type: 'string',
            pattern: '^\\d{2}:\\d{2}$',
            description: "24 hour time specifier\n",
            example: '06:00'
        },
        booked_by: {
            type: 'string',
            description: "the party claiming the resource.\nformat may vary depending on resource type.\n"
        },
        type: {
            type: 'string',
            enum: ['user', 'service-window']
        }
    }
};
exports.BookingSchema = {
    title: 'Booking',
    allOf: [
        {
            '$ref': '#/components/schemas/Model'
        },
        {
            '$ref': '#/components/schemas/BookingCreateRequest'
        }
    ]
};
exports.ResourceSchemaCreateRequestSchema = {
    title: 'ResourceSchemaCreateRequest',
    type: 'object',
    required: ['schema_id', 'resource_id', 'valid_from'],
    properties: {
        schema_id: {
            type: 'string',
            format: 'uuid'
        },
        resource_id: {
            type: 'string',
            format: 'uuid'
        },
        valid_from: {
            type: 'string',
            format: 'date-time'
        }
    }
};
exports.ResourceSchemaSchema = {
    title: 'ResourceSchema',
    allOf: [
        {
            '$ref': '#/components/schemas/Model'
        },
        {
            '$ref': '#/components/schemas/ResourceSchemaCreateRequest'
        },
        {
            type: 'object',
            properties: {
                valid_to: {
                    type: 'string',
                    format: 'date-time'
                }
            }
        }
    ]
};
exports.TenantConfigSchema = {
    title: 'TenantConfig',
    type: 'object'
};
exports.TenantSchema = {
    title: 'Tenant',
    type: 'object',
    required: ['id', 'created_at', 'updated_at', 'name', 'config'],
    properties: {
        id: {
            type: 'string',
            example: 'kruthusen'
        },
        created_at: {
            type: 'string',
            format: 'datetime'
        },
        updated_at: {
            type: 'string',
            format: 'datetime'
        },
        name: {
            type: 'string',
            example: 'ACME Inc.'
        },
        config: {
            '$ref': '#/components/schemas/TenantConfig'
        }
    }
};
